// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft.proto

#ifndef PROTOBUF_raft_2eproto__INCLUDED
#define PROTOBUF_raft_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace raft {
class install_snapshot_request;
class install_snapshot_requestDefaultTypeInternal;
extern install_snapshot_requestDefaultTypeInternal _install_snapshot_request_default_instance_;
class install_snapshot_response;
class install_snapshot_responseDefaultTypeInternal;
extern install_snapshot_responseDefaultTypeInternal _install_snapshot_response_default_instance_;
class log_entry;
class log_entryDefaultTypeInternal;
extern log_entryDefaultTypeInternal _log_entry_default_instance_;
class replicate_log_entries_request;
class replicate_log_entries_requestDefaultTypeInternal;
extern replicate_log_entries_requestDefaultTypeInternal _replicate_log_entries_request_default_instance_;
class replicate_log_entries_response;
class replicate_log_entries_responseDefaultTypeInternal;
extern replicate_log_entries_responseDefaultTypeInternal _replicate_log_entries_response_default_instance_;
class snapshot_info;
class snapshot_infoDefaultTypeInternal;
extern snapshot_infoDefaultTypeInternal _snapshot_info_default_instance_;
class vote_request;
class vote_requestDefaultTypeInternal;
extern vote_requestDefaultTypeInternal _vote_request_default_instance_;
class vote_response;
class vote_responseDefaultTypeInternal;
extern vote_responseDefaultTypeInternal _vote_response_default_instance_;
}  // namespace raft

namespace raft {

namespace protobuf_raft_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_raft_2eproto

enum log_entry_type {
  e_raft_log = 0,
  e_configuration = 1,
  log_entry_type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  log_entry_type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool log_entry_type_IsValid(int value);
const log_entry_type log_entry_type_MIN = e_raft_log;
const log_entry_type log_entry_type_MAX = e_configuration;
const int log_entry_type_ARRAYSIZE = log_entry_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* log_entry_type_descriptor();
inline const ::std::string& log_entry_type_Name(log_entry_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    log_entry_type_descriptor(), value);
}
inline bool log_entry_type_Parse(
    const ::std::string& name, log_entry_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<log_entry_type>(
    log_entry_type_descriptor(), name, value);
}
// ===================================================================

class vote_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft.vote_request) */ {
 public:
  vote_request();
  virtual ~vote_request();

  vote_request(const vote_request& from);

  inline vote_request& operator=(const vote_request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const vote_request& default_instance();

  static inline const vote_request* internal_default_instance() {
    return reinterpret_cast<const vote_request*>(
               &_vote_request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(vote_request* other);

  // implements Message ----------------------------------------------

  inline vote_request* New() const PROTOBUF_FINAL { return New(NULL); }

  vote_request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const vote_request& from);
  void MergeFrom(const vote_request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(vote_request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string candidate = 3;
  void clear_candidate();
  static const int kCandidateFieldNumber = 3;
  const ::std::string& candidate() const;
  void set_candidate(const ::std::string& value);
  #if LANG_CXX11
  void set_candidate(::std::string&& value);
  #endif
  void set_candidate(const char* value);
  void set_candidate(const char* value, size_t size);
  ::std::string* mutable_candidate();
  ::std::string* release_candidate();
  void set_allocated_candidate(::std::string* candidate);

  // uint64 req_id = 1;
  void clear_req_id();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::uint64 req_id() const;
  void set_req_id(::google::protobuf::uint64 value);

  // uint64 term = 2;
  void clear_term();
  static const int kTermFieldNumber = 2;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // uint64 last_log_index = 4;
  void clear_last_log_index();
  static const int kLastLogIndexFieldNumber = 4;
  ::google::protobuf::uint64 last_log_index() const;
  void set_last_log_index(::google::protobuf::uint64 value);

  // uint64 last_log_term = 5;
  void clear_last_log_term();
  static const int kLastLogTermFieldNumber = 5;
  ::google::protobuf::uint64 last_log_term() const;
  void set_last_log_term(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:raft.vote_request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr candidate_;
  ::google::protobuf::uint64 req_id_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 last_log_index_;
  ::google::protobuf::uint64 last_log_term_;
  mutable int _cached_size_;
  friend struct protobuf_raft_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class vote_response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft.vote_response) */ {
 public:
  vote_response();
  virtual ~vote_response();

  vote_response(const vote_response& from);

  inline vote_response& operator=(const vote_response& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const vote_response& default_instance();

  static inline const vote_response* internal_default_instance() {
    return reinterpret_cast<const vote_response*>(
               &_vote_response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(vote_response* other);

  // implements Message ----------------------------------------------

  inline vote_response* New() const PROTOBUF_FINAL { return New(NULL); }

  vote_response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const vote_response& from);
  void MergeFrom(const vote_response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(vote_response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 req_id = 1;
  void clear_req_id();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::uint64 req_id() const;
  void set_req_id(::google::protobuf::uint64 value);

  // uint64 term = 2;
  void clear_term();
  static const int kTermFieldNumber = 2;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // bool vote_granted = 3;
  void clear_vote_granted();
  static const int kVoteGrantedFieldNumber = 3;
  bool vote_granted() const;
  void set_vote_granted(bool value);

  // bool log_ok = 4;
  void clear_log_ok();
  static const int kLogOkFieldNumber = 4;
  bool log_ok() const;
  void set_log_ok(bool value);

  // @@protoc_insertion_point(class_scope:raft.vote_response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 req_id_;
  ::google::protobuf::uint64 term_;
  bool vote_granted_;
  bool log_ok_;
  mutable int _cached_size_;
  friend struct protobuf_raft_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class log_entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft.log_entry) */ {
 public:
  log_entry();
  virtual ~log_entry();

  log_entry(const log_entry& from);

  inline log_entry& operator=(const log_entry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const log_entry& default_instance();

  static inline const log_entry* internal_default_instance() {
    return reinterpret_cast<const log_entry*>(
               &_log_entry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(log_entry* other);

  // implements Message ----------------------------------------------

  inline log_entry* New() const PROTOBUF_FINAL { return New(NULL); }

  log_entry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const log_entry& from);
  void MergeFrom(const log_entry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(log_entry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string log_data = 4;
  void clear_log_data();
  static const int kLogDataFieldNumber = 4;
  const ::std::string& log_data() const;
  void set_log_data(const ::std::string& value);
  #if LANG_CXX11
  void set_log_data(::std::string&& value);
  #endif
  void set_log_data(const char* value);
  void set_log_data(const char* value, size_t size);
  ::std::string* mutable_log_data();
  ::std::string* release_log_data();
  void set_allocated_log_data(::std::string* log_data);

  // uint64 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint64 index() const;
  void set_index(::google::protobuf::uint64 value);

  // uint64 term = 2;
  void clear_term();
  static const int kTermFieldNumber = 2;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // .raft.log_entry_type type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::raft::log_entry_type type() const;
  void set_type(::raft::log_entry_type value);

  // @@protoc_insertion_point(class_scope:raft.log_entry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr log_data_;
  ::google::protobuf::uint64 index_;
  ::google::protobuf::uint64 term_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_raft_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class replicate_log_entries_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft.replicate_log_entries_request) */ {
 public:
  replicate_log_entries_request();
  virtual ~replicate_log_entries_request();

  replicate_log_entries_request(const replicate_log_entries_request& from);

  inline replicate_log_entries_request& operator=(const replicate_log_entries_request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const replicate_log_entries_request& default_instance();

  static inline const replicate_log_entries_request* internal_default_instance() {
    return reinterpret_cast<const replicate_log_entries_request*>(
               &_replicate_log_entries_request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(replicate_log_entries_request* other);

  // implements Message ----------------------------------------------

  inline replicate_log_entries_request* New() const PROTOBUF_FINAL { return New(NULL); }

  replicate_log_entries_request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const replicate_log_entries_request& from);
  void MergeFrom(const replicate_log_entries_request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(replicate_log_entries_request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .raft.log_entry entries = 7;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 7;
  const ::raft::log_entry& entries(int index) const;
  ::raft::log_entry* mutable_entries(int index);
  ::raft::log_entry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::raft::log_entry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::raft::log_entry >&
      entries() const;

  // string leader_id = 3;
  void clear_leader_id();
  static const int kLeaderIdFieldNumber = 3;
  const ::std::string& leader_id() const;
  void set_leader_id(const ::std::string& value);
  #if LANG_CXX11
  void set_leader_id(::std::string&& value);
  #endif
  void set_leader_id(const char* value);
  void set_leader_id(const char* value, size_t size);
  ::std::string* mutable_leader_id();
  ::std::string* release_leader_id();
  void set_allocated_leader_id(::std::string* leader_id);

  // uint64 req_id = 1;
  void clear_req_id();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::uint64 req_id() const;
  void set_req_id(::google::protobuf::uint64 value);

  // uint64 term = 2;
  void clear_term();
  static const int kTermFieldNumber = 2;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // uint64 prev_log_index = 4;
  void clear_prev_log_index();
  static const int kPrevLogIndexFieldNumber = 4;
  ::google::protobuf::uint64 prev_log_index() const;
  void set_prev_log_index(::google::protobuf::uint64 value);

  // uint64 prev_log_term = 5;
  void clear_prev_log_term();
  static const int kPrevLogTermFieldNumber = 5;
  ::google::protobuf::uint64 prev_log_term() const;
  void set_prev_log_term(::google::protobuf::uint64 value);

  // uint64 leader_commit = 6;
  void clear_leader_commit();
  static const int kLeaderCommitFieldNumber = 6;
  ::google::protobuf::uint64 leader_commit() const;
  void set_leader_commit(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:raft.replicate_log_entries_request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::raft::log_entry > entries_;
  ::google::protobuf::internal::ArenaStringPtr leader_id_;
  ::google::protobuf::uint64 req_id_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 prev_log_index_;
  ::google::protobuf::uint64 prev_log_term_;
  ::google::protobuf::uint64 leader_commit_;
  mutable int _cached_size_;
  friend struct protobuf_raft_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class replicate_log_entries_response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft.replicate_log_entries_response) */ {
 public:
  replicate_log_entries_response();
  virtual ~replicate_log_entries_response();

  replicate_log_entries_response(const replicate_log_entries_response& from);

  inline replicate_log_entries_response& operator=(const replicate_log_entries_response& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const replicate_log_entries_response& default_instance();

  static inline const replicate_log_entries_response* internal_default_instance() {
    return reinterpret_cast<const replicate_log_entries_response*>(
               &_replicate_log_entries_response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(replicate_log_entries_response* other);

  // implements Message ----------------------------------------------

  inline replicate_log_entries_response* New() const PROTOBUF_FINAL { return New(NULL); }

  replicate_log_entries_response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const replicate_log_entries_response& from);
  void MergeFrom(const replicate_log_entries_response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(replicate_log_entries_response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 req_id = 1;
  void clear_req_id();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::uint64 req_id() const;
  void set_req_id(::google::protobuf::uint64 value);

  // uint64 term = 2;
  void clear_term();
  static const int kTermFieldNumber = 2;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // uint64 last_log_index = 3;
  void clear_last_log_index();
  static const int kLastLogIndexFieldNumber = 3;
  ::google::protobuf::uint64 last_log_index() const;
  void set_last_log_index(::google::protobuf::uint64 value);

  // bool success = 4;
  void clear_success();
  static const int kSuccessFieldNumber = 4;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:raft.replicate_log_entries_response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 req_id_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 last_log_index_;
  bool success_;
  mutable int _cached_size_;
  friend struct protobuf_raft_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class snapshot_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft.snapshot_info) */ {
 public:
  snapshot_info();
  virtual ~snapshot_info();

  snapshot_info(const snapshot_info& from);

  inline snapshot_info& operator=(const snapshot_info& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const snapshot_info& default_instance();

  static inline const snapshot_info* internal_default_instance() {
    return reinterpret_cast<const snapshot_info*>(
               &_snapshot_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(snapshot_info* other);

  // implements Message ----------------------------------------------

  inline snapshot_info* New() const PROTOBUF_FINAL { return New(NULL); }

  snapshot_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const snapshot_info& from);
  void MergeFrom(const snapshot_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(snapshot_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed64 last_snapshot_index = 1;
  void clear_last_snapshot_index();
  static const int kLastSnapshotIndexFieldNumber = 1;
  ::google::protobuf::uint64 last_snapshot_index() const;
  void set_last_snapshot_index(::google::protobuf::uint64 value);

  // fixed64 last_included_term = 2;
  void clear_last_included_term();
  static const int kLastIncludedTermFieldNumber = 2;
  ::google::protobuf::uint64 last_included_term() const;
  void set_last_included_term(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:raft.snapshot_info)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 last_snapshot_index_;
  ::google::protobuf::uint64 last_included_term_;
  mutable int _cached_size_;
  friend struct protobuf_raft_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class install_snapshot_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft.install_snapshot_request) */ {
 public:
  install_snapshot_request();
  virtual ~install_snapshot_request();

  install_snapshot_request(const install_snapshot_request& from);

  inline install_snapshot_request& operator=(const install_snapshot_request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const install_snapshot_request& default_instance();

  static inline const install_snapshot_request* internal_default_instance() {
    return reinterpret_cast<const install_snapshot_request*>(
               &_install_snapshot_request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(install_snapshot_request* other);

  // implements Message ----------------------------------------------

  inline install_snapshot_request* New() const PROTOBUF_FINAL { return New(NULL); }

  install_snapshot_request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const install_snapshot_request& from);
  void MergeFrom(const install_snapshot_request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(install_snapshot_request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string leader_id = 6;
  void clear_leader_id();
  static const int kLeaderIdFieldNumber = 6;
  const ::std::string& leader_id() const;
  void set_leader_id(const ::std::string& value);
  #if LANG_CXX11
  void set_leader_id(::std::string&& value);
  #endif
  void set_leader_id(const char* value);
  void set_leader_id(const char* value, size_t size);
  ::std::string* mutable_leader_id();
  ::std::string* release_leader_id();
  void set_allocated_leader_id(::std::string* leader_id);

  // string data = 7;
  void clear_data();
  static const int kDataFieldNumber = 7;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .raft.snapshot_info snapshot_info = 3;
  bool has_snapshot_info() const;
  void clear_snapshot_info();
  static const int kSnapshotInfoFieldNumber = 3;
  const ::raft::snapshot_info& snapshot_info() const;
  ::raft::snapshot_info* mutable_snapshot_info();
  ::raft::snapshot_info* release_snapshot_info();
  void set_allocated_snapshot_info(::raft::snapshot_info* snapshot_info);

  // uint64 req_id = 1;
  void clear_req_id();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::uint64 req_id() const;
  void set_req_id(::google::protobuf::uint64 value);

  // uint64 term = 2;
  void clear_term();
  static const int kTermFieldNumber = 2;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // uint64 offset = 4;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // bool done = 5;
  void clear_done();
  static const int kDoneFieldNumber = 5;
  bool done() const;
  void set_done(bool value);

  // @@protoc_insertion_point(class_scope:raft.install_snapshot_request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr leader_id_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::raft::snapshot_info* snapshot_info_;
  ::google::protobuf::uint64 req_id_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 offset_;
  bool done_;
  mutable int _cached_size_;
  friend struct protobuf_raft_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class install_snapshot_response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft.install_snapshot_response) */ {
 public:
  install_snapshot_response();
  virtual ~install_snapshot_response();

  install_snapshot_response(const install_snapshot_response& from);

  inline install_snapshot_response& operator=(const install_snapshot_response& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const install_snapshot_response& default_instance();

  static inline const install_snapshot_response* internal_default_instance() {
    return reinterpret_cast<const install_snapshot_response*>(
               &_install_snapshot_response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(install_snapshot_response* other);

  // implements Message ----------------------------------------------

  inline install_snapshot_response* New() const PROTOBUF_FINAL { return New(NULL); }

  install_snapshot_response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const install_snapshot_response& from);
  void MergeFrom(const install_snapshot_response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(install_snapshot_response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 req_id = 1;
  void clear_req_id();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::uint64 req_id() const;
  void set_req_id(::google::protobuf::uint64 value);

  // uint64 term = 2;
  void clear_term();
  static const int kTermFieldNumber = 2;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // uint64 bytes_stored = 3;
  void clear_bytes_stored();
  static const int kBytesStoredFieldNumber = 3;
  ::google::protobuf::uint64 bytes_stored() const;
  void set_bytes_stored(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:raft.install_snapshot_response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 req_id_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 bytes_stored_;
  mutable int _cached_size_;
  friend struct protobuf_raft_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// vote_request

// uint64 req_id = 1;
inline void vote_request::clear_req_id() {
  req_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 vote_request::req_id() const {
  // @@protoc_insertion_point(field_get:raft.vote_request.req_id)
  return req_id_;
}
inline void vote_request::set_req_id(::google::protobuf::uint64 value) {
  
  req_id_ = value;
  // @@protoc_insertion_point(field_set:raft.vote_request.req_id)
}

// uint64 term = 2;
inline void vote_request::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 vote_request::term() const {
  // @@protoc_insertion_point(field_get:raft.vote_request.term)
  return term_;
}
inline void vote_request::set_term(::google::protobuf::uint64 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:raft.vote_request.term)
}

// string candidate = 3;
inline void vote_request::clear_candidate() {
  candidate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& vote_request::candidate() const {
  // @@protoc_insertion_point(field_get:raft.vote_request.candidate)
  return candidate_.GetNoArena();
}
inline void vote_request::set_candidate(const ::std::string& value) {
  
  candidate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft.vote_request.candidate)
}
#if LANG_CXX11
inline void vote_request::set_candidate(::std::string&& value) {
  
  candidate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft.vote_request.candidate)
}
#endif
inline void vote_request::set_candidate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  candidate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft.vote_request.candidate)
}
inline void vote_request::set_candidate(const char* value, size_t size) {
  
  candidate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft.vote_request.candidate)
}
inline ::std::string* vote_request::mutable_candidate() {
  
  // @@protoc_insertion_point(field_mutable:raft.vote_request.candidate)
  return candidate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* vote_request::release_candidate() {
  // @@protoc_insertion_point(field_release:raft.vote_request.candidate)
  
  return candidate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void vote_request::set_allocated_candidate(::std::string* candidate) {
  if (candidate != NULL) {
    
  } else {
    
  }
  candidate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), candidate);
  // @@protoc_insertion_point(field_set_allocated:raft.vote_request.candidate)
}

// uint64 last_log_index = 4;
inline void vote_request::clear_last_log_index() {
  last_log_index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 vote_request::last_log_index() const {
  // @@protoc_insertion_point(field_get:raft.vote_request.last_log_index)
  return last_log_index_;
}
inline void vote_request::set_last_log_index(::google::protobuf::uint64 value) {
  
  last_log_index_ = value;
  // @@protoc_insertion_point(field_set:raft.vote_request.last_log_index)
}

// uint64 last_log_term = 5;
inline void vote_request::clear_last_log_term() {
  last_log_term_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 vote_request::last_log_term() const {
  // @@protoc_insertion_point(field_get:raft.vote_request.last_log_term)
  return last_log_term_;
}
inline void vote_request::set_last_log_term(::google::protobuf::uint64 value) {
  
  last_log_term_ = value;
  // @@protoc_insertion_point(field_set:raft.vote_request.last_log_term)
}

// -------------------------------------------------------------------

// vote_response

// uint64 req_id = 1;
inline void vote_response::clear_req_id() {
  req_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 vote_response::req_id() const {
  // @@protoc_insertion_point(field_get:raft.vote_response.req_id)
  return req_id_;
}
inline void vote_response::set_req_id(::google::protobuf::uint64 value) {
  
  req_id_ = value;
  // @@protoc_insertion_point(field_set:raft.vote_response.req_id)
}

// uint64 term = 2;
inline void vote_response::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 vote_response::term() const {
  // @@protoc_insertion_point(field_get:raft.vote_response.term)
  return term_;
}
inline void vote_response::set_term(::google::protobuf::uint64 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:raft.vote_response.term)
}

// bool vote_granted = 3;
inline void vote_response::clear_vote_granted() {
  vote_granted_ = false;
}
inline bool vote_response::vote_granted() const {
  // @@protoc_insertion_point(field_get:raft.vote_response.vote_granted)
  return vote_granted_;
}
inline void vote_response::set_vote_granted(bool value) {
  
  vote_granted_ = value;
  // @@protoc_insertion_point(field_set:raft.vote_response.vote_granted)
}

// bool log_ok = 4;
inline void vote_response::clear_log_ok() {
  log_ok_ = false;
}
inline bool vote_response::log_ok() const {
  // @@protoc_insertion_point(field_get:raft.vote_response.log_ok)
  return log_ok_;
}
inline void vote_response::set_log_ok(bool value) {
  
  log_ok_ = value;
  // @@protoc_insertion_point(field_set:raft.vote_response.log_ok)
}

// -------------------------------------------------------------------

// log_entry

// uint64 index = 1;
inline void log_entry::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 log_entry::index() const {
  // @@protoc_insertion_point(field_get:raft.log_entry.index)
  return index_;
}
inline void log_entry::set_index(::google::protobuf::uint64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:raft.log_entry.index)
}

// uint64 term = 2;
inline void log_entry::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 log_entry::term() const {
  // @@protoc_insertion_point(field_get:raft.log_entry.term)
  return term_;
}
inline void log_entry::set_term(::google::protobuf::uint64 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:raft.log_entry.term)
}

// .raft.log_entry_type type = 3;
inline void log_entry::clear_type() {
  type_ = 0;
}
inline ::raft::log_entry_type log_entry::type() const {
  // @@protoc_insertion_point(field_get:raft.log_entry.type)
  return static_cast< ::raft::log_entry_type >(type_);
}
inline void log_entry::set_type(::raft::log_entry_type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:raft.log_entry.type)
}

// string log_data = 4;
inline void log_entry::clear_log_data() {
  log_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& log_entry::log_data() const {
  // @@protoc_insertion_point(field_get:raft.log_entry.log_data)
  return log_data_.GetNoArena();
}
inline void log_entry::set_log_data(const ::std::string& value) {
  
  log_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft.log_entry.log_data)
}
#if LANG_CXX11
inline void log_entry::set_log_data(::std::string&& value) {
  
  log_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft.log_entry.log_data)
}
#endif
inline void log_entry::set_log_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  log_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft.log_entry.log_data)
}
inline void log_entry::set_log_data(const char* value, size_t size) {
  
  log_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft.log_entry.log_data)
}
inline ::std::string* log_entry::mutable_log_data() {
  
  // @@protoc_insertion_point(field_mutable:raft.log_entry.log_data)
  return log_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* log_entry::release_log_data() {
  // @@protoc_insertion_point(field_release:raft.log_entry.log_data)
  
  return log_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void log_entry::set_allocated_log_data(::std::string* log_data) {
  if (log_data != NULL) {
    
  } else {
    
  }
  log_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_data);
  // @@protoc_insertion_point(field_set_allocated:raft.log_entry.log_data)
}

// -------------------------------------------------------------------

// replicate_log_entries_request

// uint64 req_id = 1;
inline void replicate_log_entries_request::clear_req_id() {
  req_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 replicate_log_entries_request::req_id() const {
  // @@protoc_insertion_point(field_get:raft.replicate_log_entries_request.req_id)
  return req_id_;
}
inline void replicate_log_entries_request::set_req_id(::google::protobuf::uint64 value) {
  
  req_id_ = value;
  // @@protoc_insertion_point(field_set:raft.replicate_log_entries_request.req_id)
}

// uint64 term = 2;
inline void replicate_log_entries_request::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 replicate_log_entries_request::term() const {
  // @@protoc_insertion_point(field_get:raft.replicate_log_entries_request.term)
  return term_;
}
inline void replicate_log_entries_request::set_term(::google::protobuf::uint64 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:raft.replicate_log_entries_request.term)
}

// string leader_id = 3;
inline void replicate_log_entries_request::clear_leader_id() {
  leader_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& replicate_log_entries_request::leader_id() const {
  // @@protoc_insertion_point(field_get:raft.replicate_log_entries_request.leader_id)
  return leader_id_.GetNoArena();
}
inline void replicate_log_entries_request::set_leader_id(const ::std::string& value) {
  
  leader_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft.replicate_log_entries_request.leader_id)
}
#if LANG_CXX11
inline void replicate_log_entries_request::set_leader_id(::std::string&& value) {
  
  leader_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft.replicate_log_entries_request.leader_id)
}
#endif
inline void replicate_log_entries_request::set_leader_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  leader_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft.replicate_log_entries_request.leader_id)
}
inline void replicate_log_entries_request::set_leader_id(const char* value, size_t size) {
  
  leader_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft.replicate_log_entries_request.leader_id)
}
inline ::std::string* replicate_log_entries_request::mutable_leader_id() {
  
  // @@protoc_insertion_point(field_mutable:raft.replicate_log_entries_request.leader_id)
  return leader_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* replicate_log_entries_request::release_leader_id() {
  // @@protoc_insertion_point(field_release:raft.replicate_log_entries_request.leader_id)
  
  return leader_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void replicate_log_entries_request::set_allocated_leader_id(::std::string* leader_id) {
  if (leader_id != NULL) {
    
  } else {
    
  }
  leader_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leader_id);
  // @@protoc_insertion_point(field_set_allocated:raft.replicate_log_entries_request.leader_id)
}

// uint64 prev_log_index = 4;
inline void replicate_log_entries_request::clear_prev_log_index() {
  prev_log_index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 replicate_log_entries_request::prev_log_index() const {
  // @@protoc_insertion_point(field_get:raft.replicate_log_entries_request.prev_log_index)
  return prev_log_index_;
}
inline void replicate_log_entries_request::set_prev_log_index(::google::protobuf::uint64 value) {
  
  prev_log_index_ = value;
  // @@protoc_insertion_point(field_set:raft.replicate_log_entries_request.prev_log_index)
}

// uint64 prev_log_term = 5;
inline void replicate_log_entries_request::clear_prev_log_term() {
  prev_log_term_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 replicate_log_entries_request::prev_log_term() const {
  // @@protoc_insertion_point(field_get:raft.replicate_log_entries_request.prev_log_term)
  return prev_log_term_;
}
inline void replicate_log_entries_request::set_prev_log_term(::google::protobuf::uint64 value) {
  
  prev_log_term_ = value;
  // @@protoc_insertion_point(field_set:raft.replicate_log_entries_request.prev_log_term)
}

// uint64 leader_commit = 6;
inline void replicate_log_entries_request::clear_leader_commit() {
  leader_commit_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 replicate_log_entries_request::leader_commit() const {
  // @@protoc_insertion_point(field_get:raft.replicate_log_entries_request.leader_commit)
  return leader_commit_;
}
inline void replicate_log_entries_request::set_leader_commit(::google::protobuf::uint64 value) {
  
  leader_commit_ = value;
  // @@protoc_insertion_point(field_set:raft.replicate_log_entries_request.leader_commit)
}

// repeated .raft.log_entry entries = 7;
inline int replicate_log_entries_request::entries_size() const {
  return entries_.size();
}
inline void replicate_log_entries_request::clear_entries() {
  entries_.Clear();
}
inline const ::raft::log_entry& replicate_log_entries_request::entries(int index) const {
  // @@protoc_insertion_point(field_get:raft.replicate_log_entries_request.entries)
  return entries_.Get(index);
}
inline ::raft::log_entry* replicate_log_entries_request::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:raft.replicate_log_entries_request.entries)
  return entries_.Mutable(index);
}
inline ::raft::log_entry* replicate_log_entries_request::add_entries() {
  // @@protoc_insertion_point(field_add:raft.replicate_log_entries_request.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::raft::log_entry >*
replicate_log_entries_request::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:raft.replicate_log_entries_request.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::raft::log_entry >&
replicate_log_entries_request::entries() const {
  // @@protoc_insertion_point(field_list:raft.replicate_log_entries_request.entries)
  return entries_;
}

// -------------------------------------------------------------------

// replicate_log_entries_response

// uint64 req_id = 1;
inline void replicate_log_entries_response::clear_req_id() {
  req_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 replicate_log_entries_response::req_id() const {
  // @@protoc_insertion_point(field_get:raft.replicate_log_entries_response.req_id)
  return req_id_;
}
inline void replicate_log_entries_response::set_req_id(::google::protobuf::uint64 value) {
  
  req_id_ = value;
  // @@protoc_insertion_point(field_set:raft.replicate_log_entries_response.req_id)
}

// uint64 term = 2;
inline void replicate_log_entries_response::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 replicate_log_entries_response::term() const {
  // @@protoc_insertion_point(field_get:raft.replicate_log_entries_response.term)
  return term_;
}
inline void replicate_log_entries_response::set_term(::google::protobuf::uint64 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:raft.replicate_log_entries_response.term)
}

// uint64 last_log_index = 3;
inline void replicate_log_entries_response::clear_last_log_index() {
  last_log_index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 replicate_log_entries_response::last_log_index() const {
  // @@protoc_insertion_point(field_get:raft.replicate_log_entries_response.last_log_index)
  return last_log_index_;
}
inline void replicate_log_entries_response::set_last_log_index(::google::protobuf::uint64 value) {
  
  last_log_index_ = value;
  // @@protoc_insertion_point(field_set:raft.replicate_log_entries_response.last_log_index)
}

// bool success = 4;
inline void replicate_log_entries_response::clear_success() {
  success_ = false;
}
inline bool replicate_log_entries_response::success() const {
  // @@protoc_insertion_point(field_get:raft.replicate_log_entries_response.success)
  return success_;
}
inline void replicate_log_entries_response::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:raft.replicate_log_entries_response.success)
}

// -------------------------------------------------------------------

// snapshot_info

// fixed64 last_snapshot_index = 1;
inline void snapshot_info::clear_last_snapshot_index() {
  last_snapshot_index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 snapshot_info::last_snapshot_index() const {
  // @@protoc_insertion_point(field_get:raft.snapshot_info.last_snapshot_index)
  return last_snapshot_index_;
}
inline void snapshot_info::set_last_snapshot_index(::google::protobuf::uint64 value) {
  
  last_snapshot_index_ = value;
  // @@protoc_insertion_point(field_set:raft.snapshot_info.last_snapshot_index)
}

// fixed64 last_included_term = 2;
inline void snapshot_info::clear_last_included_term() {
  last_included_term_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 snapshot_info::last_included_term() const {
  // @@protoc_insertion_point(field_get:raft.snapshot_info.last_included_term)
  return last_included_term_;
}
inline void snapshot_info::set_last_included_term(::google::protobuf::uint64 value) {
  
  last_included_term_ = value;
  // @@protoc_insertion_point(field_set:raft.snapshot_info.last_included_term)
}

// -------------------------------------------------------------------

// install_snapshot_request

// uint64 req_id = 1;
inline void install_snapshot_request::clear_req_id() {
  req_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 install_snapshot_request::req_id() const {
  // @@protoc_insertion_point(field_get:raft.install_snapshot_request.req_id)
  return req_id_;
}
inline void install_snapshot_request::set_req_id(::google::protobuf::uint64 value) {
  
  req_id_ = value;
  // @@protoc_insertion_point(field_set:raft.install_snapshot_request.req_id)
}

// uint64 term = 2;
inline void install_snapshot_request::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 install_snapshot_request::term() const {
  // @@protoc_insertion_point(field_get:raft.install_snapshot_request.term)
  return term_;
}
inline void install_snapshot_request::set_term(::google::protobuf::uint64 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:raft.install_snapshot_request.term)
}

// .raft.snapshot_info snapshot_info = 3;
inline bool install_snapshot_request::has_snapshot_info() const {
  return this != internal_default_instance() && snapshot_info_ != NULL;
}
inline void install_snapshot_request::clear_snapshot_info() {
  if (GetArenaNoVirtual() == NULL && snapshot_info_ != NULL) delete snapshot_info_;
  snapshot_info_ = NULL;
}
inline const ::raft::snapshot_info& install_snapshot_request::snapshot_info() const {
  // @@protoc_insertion_point(field_get:raft.install_snapshot_request.snapshot_info)
  return snapshot_info_ != NULL ? *snapshot_info_
                         : *::raft::snapshot_info::internal_default_instance();
}
inline ::raft::snapshot_info* install_snapshot_request::mutable_snapshot_info() {
  
  if (snapshot_info_ == NULL) {
    snapshot_info_ = new ::raft::snapshot_info;
  }
  // @@protoc_insertion_point(field_mutable:raft.install_snapshot_request.snapshot_info)
  return snapshot_info_;
}
inline ::raft::snapshot_info* install_snapshot_request::release_snapshot_info() {
  // @@protoc_insertion_point(field_release:raft.install_snapshot_request.snapshot_info)
  
  ::raft::snapshot_info* temp = snapshot_info_;
  snapshot_info_ = NULL;
  return temp;
}
inline void install_snapshot_request::set_allocated_snapshot_info(::raft::snapshot_info* snapshot_info) {
  delete snapshot_info_;
  snapshot_info_ = snapshot_info;
  if (snapshot_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:raft.install_snapshot_request.snapshot_info)
}

// uint64 offset = 4;
inline void install_snapshot_request::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 install_snapshot_request::offset() const {
  // @@protoc_insertion_point(field_get:raft.install_snapshot_request.offset)
  return offset_;
}
inline void install_snapshot_request::set_offset(::google::protobuf::uint64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:raft.install_snapshot_request.offset)
}

// bool done = 5;
inline void install_snapshot_request::clear_done() {
  done_ = false;
}
inline bool install_snapshot_request::done() const {
  // @@protoc_insertion_point(field_get:raft.install_snapshot_request.done)
  return done_;
}
inline void install_snapshot_request::set_done(bool value) {
  
  done_ = value;
  // @@protoc_insertion_point(field_set:raft.install_snapshot_request.done)
}

// string leader_id = 6;
inline void install_snapshot_request::clear_leader_id() {
  leader_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& install_snapshot_request::leader_id() const {
  // @@protoc_insertion_point(field_get:raft.install_snapshot_request.leader_id)
  return leader_id_.GetNoArena();
}
inline void install_snapshot_request::set_leader_id(const ::std::string& value) {
  
  leader_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft.install_snapshot_request.leader_id)
}
#if LANG_CXX11
inline void install_snapshot_request::set_leader_id(::std::string&& value) {
  
  leader_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft.install_snapshot_request.leader_id)
}
#endif
inline void install_snapshot_request::set_leader_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  leader_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft.install_snapshot_request.leader_id)
}
inline void install_snapshot_request::set_leader_id(const char* value, size_t size) {
  
  leader_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft.install_snapshot_request.leader_id)
}
inline ::std::string* install_snapshot_request::mutable_leader_id() {
  
  // @@protoc_insertion_point(field_mutable:raft.install_snapshot_request.leader_id)
  return leader_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* install_snapshot_request::release_leader_id() {
  // @@protoc_insertion_point(field_release:raft.install_snapshot_request.leader_id)
  
  return leader_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void install_snapshot_request::set_allocated_leader_id(::std::string* leader_id) {
  if (leader_id != NULL) {
    
  } else {
    
  }
  leader_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leader_id);
  // @@protoc_insertion_point(field_set_allocated:raft.install_snapshot_request.leader_id)
}

// string data = 7;
inline void install_snapshot_request::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& install_snapshot_request::data() const {
  // @@protoc_insertion_point(field_get:raft.install_snapshot_request.data)
  return data_.GetNoArena();
}
inline void install_snapshot_request::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft.install_snapshot_request.data)
}
#if LANG_CXX11
inline void install_snapshot_request::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft.install_snapshot_request.data)
}
#endif
inline void install_snapshot_request::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft.install_snapshot_request.data)
}
inline void install_snapshot_request::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft.install_snapshot_request.data)
}
inline ::std::string* install_snapshot_request::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:raft.install_snapshot_request.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* install_snapshot_request::release_data() {
  // @@protoc_insertion_point(field_release:raft.install_snapshot_request.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void install_snapshot_request::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:raft.install_snapshot_request.data)
}

// -------------------------------------------------------------------

// install_snapshot_response

// uint64 req_id = 1;
inline void install_snapshot_response::clear_req_id() {
  req_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 install_snapshot_response::req_id() const {
  // @@protoc_insertion_point(field_get:raft.install_snapshot_response.req_id)
  return req_id_;
}
inline void install_snapshot_response::set_req_id(::google::protobuf::uint64 value) {
  
  req_id_ = value;
  // @@protoc_insertion_point(field_set:raft.install_snapshot_response.req_id)
}

// uint64 term = 2;
inline void install_snapshot_response::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 install_snapshot_response::term() const {
  // @@protoc_insertion_point(field_get:raft.install_snapshot_response.term)
  return term_;
}
inline void install_snapshot_response::set_term(::google::protobuf::uint64 value) {
  
  term_ = value;
  // @@protoc_insertion_point(field_set:raft.install_snapshot_response.term)
}

// uint64 bytes_stored = 3;
inline void install_snapshot_response::clear_bytes_stored() {
  bytes_stored_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 install_snapshot_response::bytes_stored() const {
  // @@protoc_insertion_point(field_get:raft.install_snapshot_response.bytes_stored)
  return bytes_stored_;
}
inline void install_snapshot_response::set_bytes_stored(::google::protobuf::uint64 value) {
  
  bytes_stored_ = value;
  // @@protoc_insertion_point(field_set:raft.install_snapshot_response.bytes_stored)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace raft

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::raft::log_entry_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::raft::log_entry_type>() {
  return ::raft::log_entry_type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_raft_2eproto__INCLUDED
